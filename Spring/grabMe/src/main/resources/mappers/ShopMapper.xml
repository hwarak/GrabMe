<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.grabme.mappers.ShopMapper">

	<!-- 비즈니스 등록 -->
	<insert id="insertShop">
		insert into
		shop(owner_idx,category_idx,shop_thumbnail,shop_title,shop_address,shop_phone,shop_introduction,shop_lon,shop_lat, shop_katalk_url, shop_insta_url)
		value(#{ownerIdx},#{categoryIdx},#{shopThumbnail},#{shopTitle},#{shopAddress},#{shopPhone},#{shopIntroduction},#{shopLon},#{shopLat},#{shopKatalkUrl},#{shopInstaUrl})
	</insert>

	<!-- 사장님 idx로 등록된 비즈니스 idx 찾기 -->
	<select id="selectShopIdx" resultType="Integer">
		select shop_idx from shop where owner_idx=#{ownerIdx};
	</select>
	
	<!-- 사장님이 등록한 비즈니스가 있으면 1을 없으면 0을 반환한다 -->
	<select id="checkShop" resultType="Integer">
		select count(*) from shop where owner_idx=#{ownerIdx}
	</select>
	
	<!-- 비즈니스 정보 모두 보기 -->
	<select id="selectShopAllInfo" resultType="com.grabme.vo.ShopVO">
		select 
		shop_idx as shopIdx,
		owner_idx as ownerIdx,
		category_idx as categoryIdx,
		shop_thumbnail as shopThumbnail,
		shop_title as shopTitle,
		shop_address as shopAddress,
		shop_phone as shopPhone,
		shop_introduction as shopIntroduction,
		shop_lon as shopLon,
		shop_lat as shopLat,
		shop_katalk_url as shopKatalkUrl,
		shop_insta_url as shopInstaUrl
		from shop where shop_idx=#{shopIdx}
	</select>

	<!-- 비즈니스 정보 업데이트 -->
	<update id="updateShopAllInfo">
		update shop set shop_title=#{shopTitle},
		category_idx=#{categoryIdx}, shop_thumbnail=#{shopThumbnail}, shop_title=#{shopTitle},
		shop_address=#{shopAddress},shop_phone=#{shopPhone},shop_introduction=#{shopIntroduction},
		shop_lon=#{shopLon}, shop_lat=#{shopLat}, shop_katalk_url=#{shopKatalkUrl}, shop_insta_url=#{shopInstaUrl}
		WHERE shop_idx=#{shopIdx}
	</update>

	<!-- 비즈니스 삭제 -->
	<delete id="deleteShop">
		delete from shop where shop_idx=#{shopIdx}
	</delete>

	<!-- 비즈니스에 등록된 예약 시각들, 예약 내역들 모두 삭제 -->
	<delete id="deleteTimeReservation">
		delete time, reservation
		from time left join reservation on time.time_idx = reservation.time_idx
		where time.shop_idx = #{shopIdx}
	</delete>

</mapper>








